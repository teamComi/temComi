/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-25 07:36:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.party;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import party.model.vo.Party;
import java.util.ArrayList;
import party.model.vo.Party;

public final class party_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/party/./partyView.jsp", Long.valueOf(1692948161708L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("party.model.vo.Party");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>party_view</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/comi/resources/css/lib/jquery-ui.min.css\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/comi/resources/css/main.css\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/comi/resources/css/party_view.css\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"/comi/resources/css/party_view_click.css\"/>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/comi/resources/js/lib/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/comi/resources/js/lib/lozad.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/comi/resources/js/common.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Header Section Begin -->\r\n");
      out.write("    <header id=\"header_view\">    \r\n");
      out.write("    </header>\r\n");
      out.write("    <!-- Header Section End -->\r\n");
      out.write("\r\n");
      out.write("    <!-- main -->\r\n");
      out.write("    <main class=\"main_wrapper\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"search-container\">\r\n");
      out.write("                <div class=\"search-box\">\r\n");
      out.write("                    <button class=\"search-btn\">\r\n");
      out.write("                        <img src=\"/comi/resources/images/search_btn.png\" class=\"search-image\">\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <input type=\"text\" placeholder=\"찾고 싶은 공유 모임을 검색해보세요.\" class=\"search-box-text\" value=\"\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"search-classify\">\r\n");
      out.write("                    <span class=\"search-classify-title\">분류</span>\r\n");
      out.write("                    <select class=\"search-classify-select\" onchange=\"changeCategory(this.value);\">\r\n");
      out.write("                        <option value=\"all\" selected>전체</option>\r\n");
      out.write("                        <option value=\"meeting\">모임</option>\r\n");
      out.write("                        <option value=\"group\">공구</option>\r\n");
      out.write("                        <option value=\"rental\"> 렌탈</option>\r\n");
      out.write("                        <option value=\"game\">게임</option>\r\n");
      out.write("                        <option value=\"etc\"> 기타</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("\r\n");
      out.write("                    <select class=\"search-classify-select\" onchange=\"changeSort(this.value);\">\r\n");
      out.write("                        <option value=\"accuracy\" selected>정확도순</option>\r\n");
      out.write("                        <option value=\"interest\">관심순</option>\r\n");
      out.write("                        <option value=\"recent\">최신순</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"main_portfolio\" id=\"portf_box\">\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 ArrayList<Party> partyList = (ArrayList<Party>) request.getAttribute("partyList"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
 for(Party party : partyList){ 
      out.write("\r\n");
      out.write("     <a class=\"port_box flexBox\" href=\"/comi/partysel?panum=");
      out.print( party.getPaNum() );
      out.write("&act='");
      out.print( party.getPaAct() );
      out.write("\">\r\n");
      out.write("            <div class=\"image featured\">\r\n");
      out.write("                <img src=\"/comi/resources/images/empty.png\" alt=\"\" />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"text_box\">\r\n");
      out.write("                <div class=\"port_box_title\">");
      out.print( party.getPaTitle() );
      out.write("</div>\r\n");
      out.write("                <div class=\"port_box_textbox\">\r\n");
      out.write("                    <div class=\"port_box_price\">가격 : <span class=\"price_all\">");
      out.print( party.getPaTotalAmount() );
      out.write("</span></div>\r\n");
      out.write("                    <div class=\"port_box_deposit port_box_text_right\">\r\n");
      out.write("                    	예치금 : <span class=\"price_deposit\">");
      out.print( party.getPaDeposit() );
      out.write("</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"port_box_textbox\">\r\n");
      out.write("                    <div class=\"port_box_address\">");
      out.print( party.getPaLocation() );
      out.write("</div>\r\n");
      out.write("                    <div class=\"port_box_date port_box_text_right\">");
      out.print( party.getPaEnroll() );
      out.write("</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"port_box_textbox\">\r\n");
      out.write("                    <div class=\"port_box_text\">인원 모집 ");
      out.print( party.getPaTotalNum() );
      out.write("명</div>\r\n");
      out.write("                    <div class=\"port_box_text port_box_text_right\">인당 ");
      out.print( party.getPaPerAmount() );
      out.write("원</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
if(party.getPaAct() == "Y") {
      out.write("\r\n");
      out.write("                <div class=\"party_closed_bottom\">종료된 모임이에요.</div>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </a>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </main>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Footer Section Begin -->\r\n");
      out.write("    <footer id=\"footer_view\">	\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!-- Footer Section End -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
